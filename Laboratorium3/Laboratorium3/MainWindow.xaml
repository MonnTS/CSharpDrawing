<Window x:Class="Laboratorium3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="MyContacts" Height="352" Width="609" Background="#2f2d2d">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedStyleButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="40" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="28">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#EAB01E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#F1CA68"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#F1CA68"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <TextBox HorizontalAlignment="Left" x:Name="txtname" x:FieldModifier="public" Height="23" Margin="10,41,0,0" TextWrapping="Wrap" Background="Gray" Text="{Binding SelectedItem.Name, ElementName=MyListView}" VerticalAlignment="Top" Width="120"/>
        <TextBox HorizontalAlignment="Left" x:Name="txtcity" x:FieldModifier="public" Height="23" Margin="10,100,0,0" TextWrapping="Wrap" Background="Gray" Text="{Binding SelectedItem.City, ElementName=MyListView}" VerticalAlignment="Top" Width="120"/>
        <TextBox HorizontalAlignment="Left" x:Name="txtdate" x:FieldModifier="public" Height="23" Margin="10,159,0,0" TextWrapping="Wrap" Background="Gray" Text="{Binding SelectedItem.DateTime, ElementName=MyListView, StringFormat={}{0:dd.MM.yyyy}}" VerticalAlignment="Top" Width="120"/>

        <Label Content="Name" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="City" HorizontalAlignment="Left" Margin="10,69,0,0" VerticalAlignment="Top" Foreground="White"/>
        <Label Content="Date of Birth" HorizontalAlignment="Left" Margin="10,128,0,0" VerticalAlignment="Top" Foreground="White"/>

        <Button Content="Add" Name="BtnAdd" BorderBrush="{x:Null}" Background="#FF64CCF1" Foreground="White" Style="{DynamicResource RoundedStyleButton}" Command="{Binding AddPerson}" Click="btnAdd_Click" HorizontalAlignment="Left" Margin="10,192,0,0" VerticalAlignment="Top" Width="75"/>
        <Button Content="Delete" Name="BtnDelete" BorderBrush="{x:Null}" Background="#FF64CCF1" Foreground="White" Style="{DynamicResource RoundedStyleButton}" Command="{Binding DeletePerson}" Click="btnDelete_Click" HorizontalAlignment="Left" Margin="10,225,0,0" VerticalAlignment="Top" Width="75"/>

        <ListView x:Name="MyListView" SelectionMode="Single" Background="#2f2d2d" Foreground="White" ItemsSource="{Binding PersonsList, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="277" Margin="160,23,0,0" VerticalAlignment="Top" Width="400">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="200" DisplayMemberBinding="{Binding Path=Name, Mode=TwoWay}">Name</GridViewColumn>
                    <GridViewColumn Width="200" DisplayMemberBinding="{Binding Path=City, Mode=TwoWay}">City</GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Window>
